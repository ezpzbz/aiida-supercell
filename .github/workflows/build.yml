name: Build

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.7,3.8,3.9]
        backend: ['django']
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
    steps:
    - uses: actions/checkout@v2
    - name: Cache python dependencies
      id: cache-pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: pip-${{ matrix.python-version }}-tests-${{ hashFiles('**/setup.json') }}
        restore-keys: |
          pip-${{ matrix.python-version }}-tests
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[testing,pre-commit,docs]
        reentry scan
        pip freeze
    - name: Run pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
    - name: Get Supercell
      run: |
        mkdir -p $GITHUB_WORKSPACE/supercell2
        wget https://orex.github.io/supercell/exe/supercell-linux.tar.gz 
        tar -xzvf supercell-linux.tar.gz
        mv supercell supercell2
        echo $GITHUB_WORKSPACE
        echo $GITHUB_WORKSPACE/supercell2 >> $GITHUB_PATH
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        activate-conda: false
    - name: Install Enumlib
      run: |
        conda install -y --channel matsci enumlib
    - name: Run pytest
      run: |
        pytest --cov-report=xml --cov=./aiida_supercell
    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.xml